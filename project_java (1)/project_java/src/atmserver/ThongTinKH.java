/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atmserver;

import db.Access;
import db.DBConnect;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tran Quoc
 */
public class ThongTinKH extends javax.swing.JFrame {

    /**
     * Creates new form ThongTinKH
     */
    public String ma = null;
    DefaultTableModel tableModel;
    public  String Sotaikhoan = null;
    
    public ThongTinKH() {
        initComponents();
        setLocationRelativeTo(null);
        btnDelete.setIcon(new ImageIcon("src/images/xoa.png"));
        btnEdit.setIcon(new ImageIcon("src/images/back.gif"));
        btnTHOAT.setIcon(new ImageIcon("src/images/quaylai.png"));
        btnTuychon.setIcon(new ImageIcon("src/images/ngoisao.png"));
        btnLoc.setIcon(new ImageIcon("src/images/kiemtra.png"));
        btnRefresh.setIcon(new ImageIcon("src/images/tuoi.png"));
        
        String[] table = {"Số TK", "Mật Khẩu", "Họ Tên", "Địa chỉ", "Ngày Sinh", "Email", "Phone","Tiền","Giới Tính"};
        tableModel = new DefaultTableModel(table, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        TableDSUser.setModel(tableModel);
        this.loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTHOAT = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableDSUser = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        txtLoc = new javax.swing.JTextField();
        btnLoc = new javax.swing.JButton();
        btnTuychon = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnTHOAT.setText("Thoát");
        btnTHOAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTHOATActionPerformed(evt);
            }
        });

        TableDSUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SÔ Tk", "Mật khẩu", "Họ Tên", "Địa chỉ", "Tổng tiền", "Số điện thoại", "Ngày sinh", "Giới tính"
            }
        ));
        jScrollPane1.setViewportView(TableDSUser);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Update");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnLoc.setText("Lọc");
        btnLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocActionPerformed(evt);
            }
        });

        btnTuychon.setText("Tùy chọn");
        btnTuychon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTuychonActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTHOAT))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnTuychon)
                        .addGap(73, 73, 73)
                        .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLoc)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh)
                        .addGap(0, 319, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit)
                    .addComponent(txtLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoc)
                    .addComponent(btnTuychon)
                    .addComponent(btnRefresh))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnTHOAT))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTHOATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTHOATActionPerformed
       this.cancle();
    }//GEN-LAST:event_btnTHOATActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (TableDSUser.getSelectedRowCount()==0) {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng!!!");
        }else{
            int indexRow = TableDSUser.getSelectedRow();
            Sotaikhoan = TableDSUser.getModel().getValueAt(indexRow, 0).toString();
            Connection con = null;
            CallableStatement cstmt = null;
            con = DBConnect.opConnection();
            try {
                if (JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa ?", "", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
                cstmt = con.prepareCall("{call deleteCustomer (?)}");
                cstmt.setString(1, Sotaikhoan);
                int i = cstmt.executeUpdate();
                if (i>0) {
                    JOptionPane.showMessageDialog(null, "Xóa thành công "+Sotaikhoan);
                    this.loadTable();
                 }else{
                    JOptionPane.showMessageDialog(null, "Xóa thất bại!!","LỖI",JOptionPane.ERROR_MESSAGE);
                }
                }
            } catch (SQLException ex) {
                Logger.getLogger(ThongTinKH.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                DBConnect.closeAll(con, cstmt, null);
            }
            
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (TableDSUser.getSelectedRowCount()==0) {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng!!!");
        }else{
            int indexRow = TableDSUser.getSelectedRow();
            Sotaikhoan = TableDSUser.getModel().getValueAt(indexRow, 0).toString();
            this.dispose();
            Sotaikhoan = TableDSUser.getModel().getValueAt(TableDSUser.getSelectedRow(), 0).toString(); 
            editKH edit = new editKH();
            edit.loadsoTK(Sotaikhoan);
            
            edit.setVisible(true);
            
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnTuychonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTuychonActionPerformed
        // TODO add your handling code here:
        if (TableDSUser.getSelectedRowCount()==0) {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn một hàng!!!");
        }else{
            int indexRow = TableDSUser.getSelectedRow();
            Sotaikhoan = TableDSUser.getModel().getValueAt(indexRow, 0).toString();
            this.dispose();
            Sotaikhoan = TableDSUser.getModel().getValueAt(TableDSUser.getSelectedRow(), 0).toString(); 
            taikhoan tk = new taikhoan();
            tk.loadMaKH(Sotaikhoan);
            
            tk.setVisible(true);
            
        }
        
        
    }//GEN-LAST:event_btnTuychonActionPerformed
    private void loc(){
        String stk = txtLoc.getText();
        if (txtLoc.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Nhập Số Tài KHoản!!","THÔNG BÁO",JOptionPane.ERROR_MESSAGE);
        }else{
            Connection con = null;
            ResultSet rs = null;
            CallableStatement cstmt = null;
            con = DBConnect.opConnection();
            while (tableModel.getRowCount() > 0) {
                    tableModel.removeRow(0);
                }
            try {
                
                cstmt = con.prepareCall("{call getCustomerId (?)}");
                cstmt.setString(1, stk);
                rs = cstmt.executeQuery();
                while (rs.next()) {                    
                    Object[] dt ={
                    rs.getString("Sotaikhoan"),
                    rs.getString("Password"),
                    rs.getString("Name"),
                    rs.getString("Address"),
                    rs.getDate("Date"),
                    rs.getString("Email"),                    
                    rs.getString("Phone"),
                    rs.getFloat("Money"),
                    rs.getBoolean("Gender")?"Nam":"Nữ"
                    };
                    tableModel.addRow(dt);
                }
                
            } catch (SQLException ex) {
                Logger.getLogger(ThongTinKH.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                DBConnect.closeAll(con, cstmt, rs);
            }
        }
    }
    private void btnLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocActionPerformed
        // TODO add your handling code here:
        this.loc();
    }//GEN-LAST:event_btnLocActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        this.loadTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongTinKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongTinKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongTinKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongTinKH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThongTinKH().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableDSUser;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLoc;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTHOAT;
    private javax.swing.JButton btnTuychon;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtLoc;
    // End of variables declaration//GEN-END:variables

    private void cancle() {
        panel p = new panel();
        Access.CanleAcess(p, this);
    }

    private void loadTable() {
        tableModel.setRowCount(0);
        
        Connection con = null;
        ResultSet rs = null;
        CallableStatement cstmt = null;
        con = DBConnect.opConnection();
        try {
            cstmt = con.prepareCall("{call getCustomer}");
            rs = cstmt.executeQuery();
            while (rs.next()) {                
                Object[] dt ={
                    rs.getString("Sotaikhoan"),
                    rs.getString("Password"),
                    rs.getString("Name"),
                    rs.getString("Address"),
                    rs.getDate("Date"),
                    rs.getString("Email"),                    
                    rs.getString("Phone"),
                    rs.getFloat("Money"),
                    rs.getBoolean("Gender")?"Nam":"Nữ"
                };
                tableModel.addRow(dt);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ThongTinKH.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
        DBConnect.closeAll(con, cstmt, rs);
            }
        
    }
}
